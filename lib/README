/**
\defgroup clish "CLI Shell" Library
@{

This library provides the core functionality for a shell to implement a 
CISCO-like user interface. The look and feel is fully defined by a set of XML
files which are loaded when the shell starts up.

The schema for these XML files can be found in 
http://clish.sourceforge.net/XMLSchema/clish.xsd

@}
*/


/** EXAMPLE OF STATIC INITIALIZATION OF VIEW **********************************/

#define STATIC_EXAMPLE if(0)
STATIC_EXAMPLE {

  // ## THIS SHOULD GET COMPILED OUT WITH EVEN MINIMAL OPTIMIZATIONS #####
  // 
  // The purpose of this is to provide a visual of the structure of an argument vector.



// VIEW ..

// COMMAND ..


  clish_pargv_t pargv = (clish_pargv_t){ // vector of arguments 

    (unsigned int) 1,             // pargc: argument count
    (clish_parg_t [1]) {          // pargv: argument vector

      // ##### FIRST ARGUMENT: Regular Expression ############################################
      (clish_parg_t){                // parg: parameter argument

        (clish_param_t){             // param: parameter

          (char[7])  "Param1",          // name: parameter name
          (char[12]) "Param1 Help",     // text: help text
          (clish_ptype_t) {             // ptype: type type of this parameter

             (struct clish_ptype_t) {

                 (char[5])  "Type1",       // name: parameter type name
                 (char[xx]) "Type1 Help",  // text: help text
                 (char[xx]) "0..10",       // pattern: regexp or numeric range pattern
                 (char[xx]) "0..10",       /* range: integer or unsigned integer range is empty
                                            *        when regexp is used. */

                 (clish_ptype_method_e)     CLISH_PTYPE_INTEGER, 
                                         /* UNSIGNED INTEGER,  
                                            REGEXP, or SELECT */
                 (clish_ptype_preprocess_e) CLISH_PTYPE_NONE,
                                         /* CLISH_PTYPE_TOUPPER, or
                                            CLISH_PTYPE_TOLOWER */

                 (unsigned int) 0,         // last_name: index used for auto-completion
                 (regex_t) 1               // regexp: parenthesized re subexpression count

             }

          },
          (char[xx]) "",                // prefix
          (char[xx]) "",                // default value to use for this parameter

        },
        (char[1]) ""                    // value: user keyed value of parameter argument.
      },
    }
  }
} /* if (0) */

// vi:syntax=c
